X의 인덱스값(위치값) 리턴한다.
a = [1,2,3] - x

9. 리스트 요소 추가 - index(끼어들기)
a = [4,1,2,3]
a.insert


10. 리스트 요소 제거 - remove
remove(x) : 첫번째로 나오는 X를 삭제한다.
a = [1,2,3,1,2,3]
a.remove(3) -> [1,2,1,2,3]

11. 리스트 요소 끄집어내기 - pop
pop()은 리스트이 맨 마지막 요소값을 삭제한다.
a = [4,5,6,10,50,40,70]
a.pop() -> [4,5,6,10,50,40]

12. 리스트 포함된 요소x의 개수 세기 -> count
a = [1,2,3,1]
a.count(x=1) : 2

13. 리스트 확장(extends) : 묶음단위로 추가
extends(x:리스트) : 리스트만 들어올 수 있다.
원래의 a 리스트 x리스트를 더하게 된다.
a = [1,2,3]
a.extend([4,5]) -> [1,2,3,4,5]
문제 : 10의 값까지 확장해서 한번에 더해보자.
a.extend([6,7,8,9,10])

@ 튜플 자료형 : 집합으로 값을 묶을 때 활용
1. 리스트는 [] / 튜플은 ()
2. 리스트는 요소값 생성/삭제/수정 -> 변경 불가능
3. 값을 한번에 묶음으로 정의 하거나 인덱스(첨자 : 인덱스) 값을 위치에 맞게 출력한다.

1) 튜플 정의하기
t1 = (1,2,'a','b') -> t1[0] : 리스트와 같이 형식을 사용해야 값을 알 수 있다.

2) 튜플 슬라이싱하기
t1 = (1,2,'a','b')
t1[1:] -> (2,'a','b')

3) 튜플 더하기(+)
t1 = (1,2,'a','b')
t2 = (3,4)
t1 + t2 = (1,2,'a','b',3,4)

4) 튜플 곱하기(*)
t2 = (3,4)
t3 = t2 * 3 -> (3,4,3,4,3,4)

5) 튜플 길이 구하기
t1 = (1,2,'a','b')
len(t1) -> 4

문제 : (1,2,3)이라는 튜플에 4를 추가해서 (1,2,3,4) 라는 새로운 튜플을 출력해보자.
1. 변수를 정의해서 튜플을 담자.
2. 변수의 값에 새로운 튜플을 더한다.

@ 딕셔너리 (키값 = 요소값, 키값=요소값)
key와 value라는 한쌍으로 만들 수 있는 자료형
{key1:value1,key2:value2}
사람정보)
이름/번호/생년월일
person = {name:'key',phone:010-9999-1234,birth:900110}
person['name'] => key
person['phone'] => 010-9999-1234
person['birth'] => 900110

딕셔너리키값그룹화 : a.keys()
딕셔너리값 그룹화 : a.values()

#주의사항
1. 키값(코드)를 중복처리하지 않게 해야한다.
마지막 하나를 제외한 나머지 것들이 모두 무시되고 최근에 값만 저장된다. 
2. 하나의 코드값만 담을 수 있다.

문제 : 딕셔너리 값 추출하기
딕셔너리 a에서 'B'에 해당하는 값을 추출하기
a = {'A':90,'B':80,'C':70}
b = a.pop('B')
print(b) -> 80 / a = {'A':90, 'C':70}

@ 집합 자료형
교집합/합집합/차집합
s1 = set([1,2,3,4,5,6])
s2 = set([4,5,6,7,8,9])
1. 교집합 (S1 & S2) : 서로 중복되는 값들이 출력
2. 합집합(S1 | S2)) : 서로 중복된 값은 하나로 묶이고 전체의 값이 출력된다. = s1.union(s2)
3. 차집합 (s2 - s1) : 첫번째 빼는 기준으로 두번째 비교하는 기준에서 없는 값이 출력
4. 집합 자료형 관련함수
1) 값 1개 추가 (add)
s1 = set([1,2,3])
s1.add(4) -> [1,2,3,4]
2) 여러요소 값을 추가(update)
s1 = set([1,2,3])
s1.update([4,5,6]) -> [1,2,3,4,5,6]
3) remove (x=요소값) 사용해서 삭제 가능

@ 자료형의 값을 저장하는 공간 '변수'
(변수_이름 = 변수에 저장할 값)
변수는 객체를 가리킨다고 정의하거나 자료형의 데이터(값) 같은 것을 의미한다.
a = [1,2,3]
가리키게 된다.
a = [1,2,3] / b-a 같은 메모리 저장
a is b --> true : 같은 메모리 주소값을 확인
# copy 모듈을 사용한다.
from copy import copy
a = [1,2,3]
b = copy(a)
id(a) -> 1810917605120
id(b) -> 1810917433472

#변수를 만드는 여러가지 방법
1) a,b = ('python','life')
a = 'python' / b = 'life'
2) a = b = 'python' : 두 변수를 정의하고 중복되는 값을 정의할 수 있다.

a = [1,2,3]
b = [1,2,3]
a is b ->  출력되는 값 : false
문제 : 리스트에서 중복 제거하기
a = [1,1,1,2,2,3,3,3,4,4,5]
1. a 리스트를 중복을 제거한 집합 자료형으로 변환 : (set)
2. 집합자료형({})을 리스트 자료형([])을 변환
3. 출력된 결과 -> [1,2,3,4,5]

@ 프로그램 구조 제어문 (pycharm)
if문 switch문 : 조건을 만들어서 참인 경우에만 처리하는 문법
if 조건문 :
     수행될 문장1
     수행될 문장2