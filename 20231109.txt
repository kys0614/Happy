@instaceof 연산자 : 객체를 만들었다고 잘 생성되었는지 몰라
객체 instanceof 타입 (클래스명) -> true/false
1) 참조 변수의 형변환 가능 여부를 확인한다.
2) 형 변환 전 반드시 instaceof로 확인한다.

@ 매개변수(함수:(매개변수)->리턴(X/O))의 다형성
1) 참조변수의 다형적인 특징은 매개변수 적용가능하다.
- 자신 및 자손 타입의 인스턴스를 넘겨줄 수 있다.
2) 전자제품 판매점 고객관리 예제

@오버로딩/오버라이딩 정리하기
오버로딩 : 기본생성자 다양한 매개변수를 활용해서 사용하는 방법
기본생성자(나자신) : 객체가 생성될 때 초기화된다.
기본생성자(매개변수개수, 매개변수자료형) 여러가지로 만들 수 있다.
슈퍼생성자(상속받은 부모를 의존할 때) 먼저 정의한다.
class Person{
 String name;
   Person(String name){
      this.name = name;
   }
   void talk(){
      System.out.println("나는 부모다");
   }
}
class price extends Person{
 int money = 0;
   price(int price, String name){
      super(name); //슈퍼생성자
      this.money = price;
      }
      void talk(){ //부모의 메서드 이름을 그대로 사용(선언부)
         System.out.println("나는 자식이다.")
      }
}
main method(){
   price p = new Price(price,name);
   p.name;
   p.price;
}
오버라이딩 : 상속받은 조상의 메서드를 자식의 다양한 형태로 구조를 만들고 사용한 것





















